<div class="ui-g " [formGroup]="GRINDING" *ngIf="PageFlag.page =='AssignTask'">
  <!--Strain -->
 <div class="ui-g-12 ui-md-6">
    <div class="paddingRL">
        <label for="strain">{{ globalResource.strain }}<span class="star">*</span></label>:
      <div class="clear"></div>
          <p-dropdown
            [filter] ="true"
            [options]="strains"
            (onChange)="onStrainChange('frmHTML')"
            placeholder="-- Select --"
            [(ngModel)]="TaskModel.GRINDING.strain"
            [autoWidth]="true"
            [readonly]="readonlyFlag"
            formControlName="strain"
            class="clsControl"
            id="strain"
            name="strain">
        </p-dropdown>
        <div
          class="ui-message ui-messages-error ui-corner-all" appErrorTooltip
          *ngIf="!GRINDING.controls['strain'].valid&&GRINDING.controls['strain'].dirty">
           
            <span *ngIf="GRINDING.controls['strain'].errors['required']">
              {{ globalResource.strainrequired }}
            </span>                      
        </div>
  
      </div>
    </div>
    <!--End Strain -->
  <!--Lot No -->
  <div class="ui-g-12 ui-md-6">
   <div class="paddingRL">
       <label for="lotno">{{ globalResource.lotno }}<span class="star">*</span></label>:

       <app-lot-comment
          [LotId]="TaskModel.GRINDING.lotno"
          [LotCommentsCount]="lotInfo?.LotNoteCount"
          (CommentIconClicked)="commentIconClicked($event)"
        ></app-lot-comment>

       <app-lot-note-icon
        [LotId]="TaskModel.GRINDING.lotno"        
        (NoteIconClicked)="showLotNote($event)"
      ></app-lot-note-icon>

     <div class="clear"></div>
         <p-dropdown
         [filter] ="true"
           [options]="lots"
           placeholder="-- Select --"
           [(ngModel)]="TaskModel.GRINDING.lotno"
           [autoWidth]="true"
           (onChange)="lotOnChange()"
           formControlName="lotno"
           class="clsControl"
           id="lotno"
           name="lotno">
       </p-dropdown>
       <div
         class="ui-message ui-messages-error ui-corner-all" appErrorTooltip
         *ngIf="!GRINDING.controls['lotno'].valid&&GRINDING.controls['lotno'].dirty">
          
           <span *ngIf="GRINDING.controls['lotno'].errors['required']">
             {{ globalResource.lotnorequired }}
           </span>                      
       </div>
 
     </div>
   </div>
   <!--End Lot No -->
   <!--Brand-->
   <!-- <div class="ui-g-12 ui-md-6">
     <div class="paddingRL">
         <label for="brand">{{ globalResource.brand }}</label>                        
           <div class="clear"></div>
                     <span class="lblText">{{TaskModel.GRINDING.brand}}</span>
       </div>
   </div> -->
   <!--End Brand-->
   <!--Strain-->
   <!-- <div class="ui-g-12 ui-md-6">
     <div class="paddingRL">
         <label for="strain">{{ globalResource.strain }}</label>
                          <div style="clear:both"></div>
           <div class="clear"></div>
           <span class="lblText">{{TaskModel.GRINDING.strain}}</span>
       </div>
   </div> -->
   <!--End Strain-->
   <!--Employee-->
   <div class="ui-g-12 ui-md-6">
     <div class="paddingRL">
         <label for="employee">{{ globalResource.employee }}<span class="star">*</span></label>:
                      
         <div class="ui-inputgroup">
             <p-dropdown
             [filter] ="true"
               [options]="employees"
               placeholder="-- Select --"
               (onChange)="empOnChange()"
               [(ngModel)]="TaskModel.GRINDING.employee"
               [autoWidth]="true"        
               [readonly]="readonlyEmployeeFlag"      
               formControlName="employee"
               id="employee"
               class="clsControl"
               name="employee">
           </p-dropdown>            
       </div>
         <div
           class="ui-message ui-messages-error ui-corner-all" appErrorTooltip
           *ngIf="!GRINDING.controls['employee'].valid&&GRINDING.controls['employee'].dirty">
            
             <span *ngIf="GRINDING.controls['employee'].errors['required']">
               {{ globalResource.employeerequired }}
             </span>                      
         </div>
       </div>
   </div>
   <!--End Employee-->
 
 
   <!-- Task Related Extra Paramters -->
 <div class="ui-g-12 ui-md-6">
     <div class="paddingRL twocnt">
        
             <label class="towlable" for="lotWeight">{{ assignTaskResources.lotweight }}:</label>
 
           <div class="clear"></div>
           <span class="lblText">{{TaskModel.GRINDING.lotweight}}</span>    

     </div>  
   </div>

   <div class="ui-g-12 ui-md-6">
    <div class="paddingRL">
      <label for="assignwt">{{ globalResource.assignedwt }} <span class="star">*</span></label>:
   
      <input type="number" 
        pInputText
        autocomplete="off" 
        (change)="assignWtOnChnage()"
        [(ngModel)]="TaskModel.GRINDING.assignwt" 
        id="assignwt" 
        name="assignwt" 
        formControlName="assignwt"         
        OnlyNumber="true"
        maxlength="10"        
        class="clsControl"  
      />
  
      <div
        class="ui-message ui-messages-error ui-corner-all" appErrorTooltip
        *ngIf="!GRINDING.controls['assignwt'].valid&&GRINDING.controls['assignwt'].dirty">
         <span *ngIf="GRINDING.controls['assignwt'].errors['min']">
           {{ globalResource.zeronotallow}}
         </span>
          <span *ngIf="GRINDING.controls['assignwt'].errors['required']">
            {{ assignTaskResources.assignedwtrequired }}
          </span>                               
      </div>
  
    </div>
  </div>
   <!-- End Task Related Extra Paramters -->
     
 <!--Estimated Start DateTime-->
 <div class="ui-g-12 ui-md-6">
   <div class="paddingRL">
       <label for="estimatedstartdatetime">
         {{ globalResource.eststartdate }}<span class="star">*</span>:
       </label>
       <small class="smallTextRed"
        *ngIf="showPastDateLabel"
        >({{ globalResource.pastdatetask }})
      </small>
       <!-- [maxDate]="TaskModel.GRINDING.enddate" -->
         <p-calendar                        
          
           [(ngModel)]="TaskModel.GRINDING.startdate"
           [showIcon]="true"
           [defaultDate]="defaultDate"        
           (onSelect)="estStartDate_Select()"
           (onInput)="estStartDate_Select()"
           formControlName="estimatedstartdate"          
           class="clsControl"
           id="estimatedstartdate"
           name="estimatedstartdate"
           >
         </p-calendar>                              
         <div
           class="ui-message ui-messages-error ui-corner-all" appErrorTooltip
           *ngIf="!GRINDING.controls['estimatedstartdate'].valid&&GRINDING.controls['estimatedstartdate'].dirty">
            
             <span *ngIf="GRINDING.controls['estimatedstartdate'].errors['required']">
               {{ globalResource.startdaterequired }}
             </span>                                                                                                                                                                            
         </div>
 
         <div class="ui-message ui-messages-error ui-corner-all" appErrorTooltip
           *ngIf="GRINDING.hasError('invalidDate')" >
             {{ globalResource.datecomparevalidation }}
         </div>                        
     </div>
 </div>
 <!--End Estimated Start DateTime-->   
 
  <!--Priority-->
  <div class="ui-g-12 ui-md-6">
   <div class="paddingRL">
     <label for="employee">{{ globalResource.priority }}</label>:
                      
     <p-dropdown
       [options]="priorities"
       [(ngModel)]="TaskModel.GRINDING.priority"
       [autoWidth]="true"
       formControlName="priority"
       id="priority"
       class="clsControl"
       name="priority">
     </p-dropdown>                                  
   </div>
 </div>
 <!--End Priority-->
 
 <!--Notify Manager/Employee-->
 <div class="ui-g-12 ui-md-6">
   <div class="paddingRL">                              
         <p-checkbox          
           label="{{ assignTaskResources.notifymanager }}"
           [(ngModel)]="TaskModel.GRINDING.notifymanager"
           formControlName="notifymanager"
           binary="true"
         ></p-checkbox>
 
         <p-checkbox 
           value="true"
           label="{{ assignTaskResources.notifyemployee }}"
           [(ngModel)]="TaskModel.GRINDING.notifyemployee"
           formControlName="notifyemployee"
           binary="true"
         ></p-checkbox>                                                              
     </div>
 </div>
 <!--End Notify Manager/Employee-->
 <!--Comment-->
 <div class="ui-g-12 ui-md-6">
   <div class="paddingRL">
       <label for="comment">{{ assignTaskResources.comment }}</label>:
                          
         <textarea                        
           pInputTextarea                        
           [(ngModel)]="TaskModel.GRINDING.usercomment"
           formControlName="comment"
           id="comment"
           name="comment"
           maxlength="500"
           class="clsControl"
           binary="true"
         ></textarea>
 
         <div
           class="ui-message ui-messages-error ui-corner-all" appErrorTooltip
           *ngIf="!GRINDING.controls['comment'].valid&&GRINDING.controls['comment'].dirty">
            
             <span *ngIf="GRINDING.controls['comment'].errors['maxLength']">
               {{ assignTaskResources.commentMaxLength }}
             </span>                      
       </div>
     </div>
 </div>
 <!--End Comment-->
 
 </div>
 
 <app-lot-note [Lot]="lotInfo" *ngIf="lotInfo?.lotId" ></app-lot-note> 
 <app-popup-lot-comment [Lot]="lotInfo" *ngIf="lotInfo?.showLotCommentModal" (CommentSaved)="OnCommentSaved($event)">
  </app-popup-lot-comment>
 
 <div *ngIf="PageFlag.page =='TaskAction'">
   <div class="ui-g">
 
     <!--Employee -->
     <div class="ui-g-12 ui-md-6">
       <div class="paddingRL">
           <label>
             <strong>{{ globalResource.employee }}: </strong>
           </label>
         
           <label>
             {{TaskModel?.EmpName}}
           </label>
         </div>
       </div>
       <!--End Employee -->
       <!--Lot No -->
       <div class="ui-g-12 ui-md-6">
         <div class="paddingRL">
           <label>
             <strong>{{ globalResource.lotno }}: </strong>
           </label>
         
             {{TaskModel?.GrowerLotNo}}

               <app-lot-comment
                  [LotId]="TaskModel?.LotId"
                  [LotCommentsCount]="TaskModel?.LotNoteCount"
                  (CommentIconClicked)="commentIconClicked($event)"
              ></app-lot-comment>

              <app-lot-note-icon
                [LotId]="TaskModel?.LotId"                
                (NoteIconClicked)="showLotNote($event)"
            ></app-lot-note-icon>
         </div>
       </div>
       <!--End Lot No -->
       <!--Brand-->
       <!-- <div class="ui-g-12 ui-md-6">
         <div class="paddingRL">
           <label>
             <strong>{{ globalResource.brand }} : </strong>
           </label>
         
             {{TaskModel?.BrandName}}
         </div>
       </div> -->
       <!--End Brand-->
       <!--Strain-->
       <div class="ui-g-12 ui-md-6">
         <div class="paddingRL">
           <label>
             <strong>{{ globalResource.strain }}: </strong>
           </label>
        
             {{TaskModel?.StrainName}}
         </div>
       </div>
       <!--End Strain-->
      
       <!--Estimated Start DateTime-->
       <div class="ui-g-12 ui-md-6">
         <div class="paddingRL">
             <label>
               <strong>{{ globalResource.eststartdate }}: </strong>
             </label>
           
               {{TaskModel?.EstStartDate }}
           </div>
         </div>
         <!--End Estimated Start DateTime-->
 
       <!--Estimated End DateTime-->
       <!-- <div class="ui-g-12 ui-md-6">
         <div class="paddingRL">
           <label>
             <strong>{{ globalResource.estenddate }} : </strong>
           </label>
         
             {{TaskModel?.EstEndDate}}
         </div>
       </div> -->
       <!--End Estimated End DateTime-->
 
 
        <!--Actual Start DateTime-->
        <div class="ui-g-12 ui-md-6" *ngIf="TaskModel?.TaskStatus !== taskStatus.Assigned &&TaskModel?.TaskStatus !== ''" >
           <div class="paddingRL">
               <label>
                 <strong>{{ globalResource.actualstartdate }}: </strong>
               </label>
             
                 {{TaskModel?.ActStartDate }}
             </div>
           </div>
           <!--End Actual Start DateTime-->
   
         <!--Actual End DateTime-->
         <div class="ui-g-12 ui-md-6" *ngIf="TaskModel?.TaskStatus !== taskStatus.Assigned&&TaskModel?.TaskStatus !== ''">
           <div class="paddingRL">
             <label>
               <strong>{{ globalResource.actualenddate }}: </strong>
             </label>
           
               {{TaskModel?.ActEndDate}}
           </div>
         </div>
         <!--End Actual End DateTime-->
 
        <!--Est hrs-->
        <!-- <div class="ui-g-12 ui-md-6">
         <div class="paddingRL">
             <label>
               <strong>{{ globalResource.estimatedhrs }} : </strong>
             </label>
          
               {{TaskModel?.EstHrs}}
           </div>
         </div> -->
         <!--End Est hrs-->
 
         <!--Actual hrs-->
        <div class="ui-g-12 ui-md-6" *ngIf="(TaskModel?.TaskStatus === taskStatus.Completed||TaskModel?.TaskStatus === taskStatus.ReviewPending)&&TaskModel?.TaskStatus !== ''">
           <div class="paddingRL">
               <label>
                 <strong>{{ assignTaskResources.actualcost }}: </strong>
               </label>
            
                 {{TaskModel?.EmpFinalCost | currency}}
             </div>
           </div>
           <!--End Actual hrs-->
 
       <!--Priority -->
       <div class="ui-g-12 ui-md-6">
         <div class="paddingRL">
             <label>
               <strong>{{ globalResource.priority }}: </strong>
             </label>
          
             {{TaskModel?.TaskPriority}}
           </div>
         </div>
         <!--End Priority -->

        <!--Misc. Cost-->
        <div class="ui-g-12 ui-md-6" *ngIf="TaskModel?.TaskStatus === taskStatus.Completed">
           <div class="paddingRL">
               <label>
                 <strong>{{ globalResource.misccost }}: </strong>
               </label>
            
                 {{taskReviewModel?.rmisccost | currency}}
             </div>
           </div>
           <!--End Misc. Cost-->
         
       <div class="ui-g-12 ui-md-6">
         <div class="paddingRL">
           <label>
             <strong>{{ globalResource.assignwt }}: </strong>
           </label>      
             {{TaskModel?.AssignedWt}} {{globalResource.measure}}
         </div>
       </div>
 <hr />
       <!-- completion parameter -->  
       <div 
         *ngIf="TaskModel?.TaskStatus == taskStatus.ReviewPending||TaskModel?.TaskStatus == taskStatus.Completed"
         class="ui-grid ui-grid-responsive ui-grid-pad ui-fluid" 
         style="margin: 10px 0px; width:100%;">
               <div class="ui-grid-row">
                 <div class="ui-grid-col-4">
     
                 </div>
                 <div class="ui-grid-col-4">
                     <strong>Task Owner</strong>
                 </div>
                 <div class="ui-grid-col-4" *ngIf="showToManager">
                   <strong>Reviewer</strong>
                 </div>
               </div>
     
               <!-- <div class="ui-grid-row">
                   <div class="ui-grid-col-4">
                       <label><strong>{{ assignTaskResources.assignedwt }} :</strong></label>
                   </div>
                   <div class="ui-grid-col-4">
                       {{ taskReviewModel.assignedwt }}          
                   </div>
                   <div class="ui-grid-col-4" *ngIf="showToManager">
                       {{ taskReviewModel.assignedwt }}
                   </div> 
               </div> -->
               
             <div class="ui-grid-row">
               <div class="ui-grid-col-4">
                   <strong>{{ assignTaskResources.completedwt }}:</strong>
               </div>
               <div class="ui-grid-col-4">
                   {{ taskCompletionModel.completedwt }}  {{globalResource.listgramunit}}
               </div>
               <div class="ui-grid-col-4" *ngIf="showToManager">
                   {{ taskReviewModel.rcompletedwt }}  {{globalResource.listgramunit}}
               </div> 
           </div>

            <div class="ui-grid-row">
              <div class="ui-grid-col-4">
                  <strong>{{ assignTaskResources.wasteweight }}:</strong>
              </div>
              <div class="ui-grid-col-4">
                  {{ taskCompletionModel.wastewt || 0 }}  {{globalResource.listgramunit}}
              </div>
              <div class="ui-grid-col-4" *ngIf="showToManager">
                  {{ taskReviewModel.rwastewt || 0 }}  {{globalResource.listgramunit}}
              </div> 
            </div>
             <!-- End Skewed Controls -->
                  
              <!-- Emp Act Hrs -->
              <div class="ui-grid-row">
                <div class="ui-grid-col-4">
                    <strong>{{ globalResource.actualhrs }}:</strong>
                </div>
                <div class="ui-grid-col-4">
                    {{ TaskModel?.ActHrs | minutesToTime }}
                </div>
                <div class="ui-grid-col-4" *ngIf="showToManager">                
                    {{ taskReviewModel?.racthrs | minutesToTime }}
                </div> 
            </div>
            <!-- End Act Hrs -->

             <!-- Emp Return Wt -->
             <!-- <div class="ui-grid-row">
              <div class="ui-grid-col-4">
                  <strong>{{ assignTaskResources.returnwt }} :</strong>
              </div>
              <div class="ui-grid-col-4">
                  {{ TaskModel?.ReturnWt }}
              </div>
              <div class="ui-grid-col-4" *ngIf="showToManager">                
                  {{ TaskModel?.RevReturnWt }}
              </div> 
            </div> -->
            <!-- End Return Wt -->
            
             <!-- Misc Cost -->
             <!-- <div class="ui-grid-row">
                 <div class="ui-grid-col-4">
                     <strong>{{ assignTaskResources.misccost }} :</strong>
                 </div>
                 <div class="ui-grid-col-4">                   
                 </div>
                 <div class="ui-grid-col-4" *ngIf="showToManager">                                    
                     {{ taskReviewModel.misccost }}
                 </div> 
             </div> -->
              <!-- End Misc Cost -->             
       </div>             
     <!--End completion parameter -->
 
  
   <p-dialog header="Task Completion" [(visible)]="PageFlag.showmodal" modal="modal" [resizable]="true" [responsive]="true" [width]="500" [minWidth]="200">
         <form [formGroup]="completionForm" (ngSubmit)="submitCompleteParameter(completionForm.value)">
 
         <div class="ui-grid ui-grid-responsive ui-grid-pad ui-fluid" style="margin: 10px 0px">
            
         <div class="ui-grid-row">
             <div class="ui-grid-col-7">
               {{  globalResource.assignwt }}:
             </div>
             <div class="ui-grid-col-5">
                  <span>{{ TaskModel?.AssignedWt }} {{globalResource.listgramunit}}</span>
             </div> 
         </div>

         <div class="ui-grid-row">

          <div class="ui-grid-col-7">
            {{ assignTaskResources.completedwt }}<span class='star'>*</span>:
          </div>
          <div class="ui-grid-col-5">
              <input type="text"
                OnlyNumber="true"
                pInputText
                pKeyFilter="num"
                autocomplete="off" 
                [(ngModel)]="taskCompletionModel.completedwt"                         
                formControlName="completedwt"
                id="completedwt"
                name="completedwt"      
              /> 

              <div class="ui-message ui-messages-error ui-corner-all" appErrorTooltip *ngIf="!completionForm.controls['completedwt'].valid&&completionForm.controls['completedwt'].dirty">
                 
                  {{ assignTaskResources.completedwtrequired }}
              </div>
          </div> 
        </div> 
        
        <!-- Waste Weight -->
        <div class="ui-grid-row">

          <div class="ui-grid-col-7">
            {{ assignTaskResources.wasteweight }}<span class='star'>*</span>:
          </div>
          <div class="ui-grid-col-5">
              <input type="text"
                OnlyNumber="true"
                pInputText
                pKeyFilter="num"
                autocomplete="off"
                [(ngModel)]="taskCompletionModel.wastewt"
                formControlName="wastewt"
                id="wastewt"
                name="wastewt"      
              /> 

              <div class="ui-message ui-messages-error ui-corner-all" appErrorTooltip *ngIf="!completionForm.controls['wastewt'].valid&&completionForm.controls['wastewt'].dirty">
                 
                  {{ assignTaskResources.wastewtrequired }}
              </div>
          </div> 
        </div> 
        <!-- End Waste Weight -->

         <div class="ui-grid-row" style="display: none">
            <div class="ui-grid-col-7">
                {{ assignTaskResources.returnwt }} :
            </div>
            <div class="ui-grid-col-5">
                <input                    
                  type="number"                          
                  pInputText                                                      
                  placeholder="Return Wt"
                  formControlName="returnwt"                                            
                  id="returnwt"
                  name="returnwt"   
                  class="clsControl"
                />   
            </div> 
        </div>
  
         <div class="ui-grid-row">
             <div class="ui-grid-col-7">
               {{ assignTaskResources.comment }}:
             </div>
             <div class="ui-grid-col-5">
                 <textarea                        
                   pInputTextarea                        
                   [(ngModel)]="taskCompletionModel.miscComment"
                   formControlName="misccomment"
                   id="miscComment"
                   name="miscComment"
                   maxlength="500"
                   class="clsControl"
                   binary="true"
                 ></textarea>
             </div> 
         </div>
           <!-- End Skewed Controls -->
           </div>         
           <p-footer>
             <button type="submit" pButton icon="fa-check"  label="Confirm" ></button>
             <!-- [disabled]="!completionForm.valid" -->
             <button type="button" class="ui-button-secondary" pButton icon="fa-close" (click)="PageFlag.showmodal=false" label="Cancel"></button>
           </p-footer>
       </form>
   </p-dialog>
 
   <p-dialog header="Submit Review" [(visible)]="PageFlag.showReviewmodal" modal="modal" [resizable]="true" [responsive]="true" [width]="600" [minWidth]="200">
       <form [formGroup]="reviewForm" (ngSubmit)="submitReviewParameter(reviewForm.value)">
 
       <div class="ui-grid ui-grid-responsive ui-grid-pad ui-fluid" style="margin: 10px 0px">
           <div class="ui-grid-row">
             <div class="ui-grid-col-4">
 
             </div>
             <div class="ui-grid-col-4">
               Task Owner
             </div>
             <div class="ui-grid-col-4">
               Reviewer
             </div>
           </div>
 
           <div class="ui-grid-row">
               <div class="ui-grid-col-4">
                   <label>{{ assignTaskResources.assignedwt }}:</label>
               </div>
               <div class="ui-grid-col-4">                
                   {{ taskReviewModel.assignedwt }}  {{globalResource.listgramunit}}         
               </div>
               <div class="ui-grid-col-4">              
                   {{ taskReviewModel.assignedwt }}  {{globalResource.listgramunit}}
               </div> 
           </div>           
         
         <div class="ui-grid-row">
 
           <div class="ui-grid-col-4">
             {{ assignTaskResources.completedwt }} <span class="star">* </span>:
           </div>
           <div class="ui-grid-col-4">
               {{ taskReviewModel?.completedwt }}  {{globalResource.listgramunit}}
           </div> 
           <div class="ui-grid-col-4">
               <input type="text" 
                 OnlyNumber="true"
                 pInputText
                 autocomplete="off" 
                 pKeyFilter="num"
                 [(ngModel)]="taskReviewModel.rcompletedwt"
                 formControlName="completedwt"
                 id="rcompletedwt"
                 name="rcompletedwt"      
               /> 
               <div class="ui-message ui-messages-error ui-corner-all" appErrorTooltip *ngIf="!reviewForm.controls['completedwt'].valid&&reviewForm.controls['completedwt'].dirty">
                 
                {{ assignTaskResources.completedwtrequired }}
            </div>
           </div> 
         </div>
         <!-- Waste Weight -->
        <div class="ui-grid-row">

          <div class="ui-grid-col-4">
            {{ assignTaskResources.wasteweight }}<span class='star'>*</span>:
          </div>
          <div class="ui-grid-col-4">
            {{ taskReviewModel?.wastewt || 0 }}  {{globalResource.listgramunit}}
          </div> 
          <div class="ui-grid-col-4">
              <input type="text"
                OnlyNumber="true"
                pInputText
                pKeyFilter="num"
                autocomplete="off"
                [(ngModel)]="taskReviewModel.rwastewt"
                formControlName="revwastewt"
                id="revwastewt"
                name="revwastewt"      
              /> 

              <div class="ui-message ui-messages-error ui-corner-all" appErrorTooltip 
                *ngIf="!reviewForm.controls['revwastewt'].valid&&reviewForm.controls['revwastewt'].dirty">                 
                  {{ assignTaskResources.wastewtrequired }}
              </div>
          </div> 
        </div> 
        <!-- End Waste Weight -->     
         
         <!-- End Skewed Controls -->
 
         <!--  act hrs -->
       <div class="ui-grid-row">
           <div class="ui-grid-col-4">
               {{ assignTaskResources.actualhrs }}:
           </div>
           <div class="ui-grid-col-4">
               {{ TaskModel?.ActHrs | minutesToTime }}
           </div>
           <div class="ui-grid-col-4">
               <!-- <p-calendar 
               required 
               name="acthrs"                            
               [timeOnly]="true" 
               [showTime]="true" 
               formControlName="ActHrs"
               hourFormat="24">
             </p-calendar>   -->

             <div class="ui-inputgroup ui-inputgroup-border" >
               <input type="number"                   
                   pInputText
                   autocomplete="off" 
                   [(ngModel)]="taskReviewModel.racthrs"                         
                   formControlName="ActHrs"
                   id="acthrs"
                   pKeyFilter="int"
                   name="acthrs"                      
                 /> 
                 <span>:</span>
                 <input type="number"                  
                   pInputText
                   autocomplete="off"                   
                   [(ngModel)]="taskReviewModel.ractmins"                         
                   formControlName="ActMins"
                   id="actmins"
                   pKeyFilter="int"
                   name="actmins"                      
                 /> 
                 <!-- Added by Devdan :: Sec to Min change :: 06-Nov-2018 -->
                 <div class="ui-message ui-messages-error ui-corner-all" appErrorTooltip
                    *ngIf="!reviewForm.controls['ActMins'].valid&&reviewForm.controls['ActMins'].dirty">
                      <span *ngIf="reviewForm.controls['ActMins'].errors['max']">
                        {{ globalResource.maxMinSecValue }}
                      </span>
                  </div>
                  <!-- ADDED BY DEVDAN :: 06-NOV-2018 :: ADDING TEXTBOX FOR SECONDS -->
                  <span>:</span>
                  <input type="number"                  
                    pInputText         
                    autocomplete="off"      
                    pKeyFilter="int"    
                    [(ngModel)]="taskReviewModel.ractsecs"                         
                    formControlName="ActSecs"
                    id="actsecs"
                    name="actsecs"                  
                  />
                  <div class="ui-message ui-messages-error-Sec ui-corner-all" appErrorTooltip
                    *ngIf="!reviewForm.controls['ActSecs'].valid&&reviewForm.controls['ActSecs'].dirty">
                      <span *ngIf="reviewForm.controls['ActSecs'].errors['max']">
                        {{ globalResource.maxMinSecValue }}
                      </span>
                  </div>
                  <!-- END :: Sec to Min change :: 06-Nov-2018 -->
             </div>
             <!-- [stepHour]="1" 
             [stepMinute]="15"  -->
           </div> 
       </div>
       <!-- End act hrs -->
 
         <!-- Emp Est Cost -->
         <div class="ui-grid-row">
             <div class="ui-grid-col-4">
               {{ assignTaskResources.misccost }}:
             </div>
             <div class="ui-grid-col-4"> 
               {{ taskReviewModel?.misccost | currency }}                               
             </div>
             <div class="ui-grid-col-4">
                 <input type="text"
                   OnlyNumber="true" 
                   pInputText
                   pKeyFilter="num"
                   autocomplete="off" 
                   [(ngModel)]="taskReviewModel.rmisccost"                         
                   formControlName="misccost"
                   id="misccost"
                   name="misccost"      
                 />                   
                 
             </div>             
         </div>
 
         <!-- <div class="ui-grid-row">
            <div class="ui-grid-col-4">
                {{ assignTaskResources.returnwt }}  :
            </div>
            <div class="ui-grid-col-4">               
                {{ TaskModel?.ReturnWt }}
            </div>
            <div class="ui-grid-col-4">
                <input type="number"
                  OnlyNumber="true" 
                  pInputText 
                  [(ngModel)]="taskReviewModel.rreturnwt"                         
                  formControlName="returnwt"
                  id="returnwt"
                  name="returnwt"      
                />                                 
            </div>             
        </div> -->

         <div class="ui-grid-row">
             <div class="ui-grid-col-4">
               {{ assignTaskResources.comment }}:
             </div>
             <div class="ui-grid-col-4">               
                 {{ taskReviewModel.comment }}
             </div>
             <div class="ui-grid-col-4">
                 <textarea                        
                   pInputTextarea                        
                   [(ngModel)]="taskCompletionModel.rmisccomment"
                   formControlName="misccomment"
                   id="rmisccomment"
                   name="rmisccomment"
                   maxlength="500"
                   class="clsControl"
                   binary="true"
                 ></textarea>                 
                 
             </div> 
             
         </div>
         <!-- End Emp Cost -->
         </div>         
         <p-footer>
           <button type="submit" pButton icon="fa-check"  label="Confirm" ></button>
           <!-- [disabled]="!reviewForm.valid" -->
           <button type="button" class="ui-button-secondary" pButton icon="fa-close" (click)="PageFlag.showReviewmodal=false" label="Cancel"></button>
         </p-footer>
     </form>
 </p-dialog>
 
   <p-growl [(value)]="msgs" life='5000'></p-growl>
 </div>