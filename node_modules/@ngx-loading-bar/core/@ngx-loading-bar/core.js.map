{"version":3,"file":"core.js","sources":["~/@ngx-loading-bar/core/src/core.ts","~/@ngx-loading-bar/core/src/core.module.ts","~/@ngx-loading-bar/core/src/loading-bar.component.ts","~/@ngx-loading-bar/core/src/loading-bar.service.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {LoadingBarModule,LoadingBarComponent,LoadingBarService} from './index';\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingBarComponent } from './loading-bar.component';\nimport { LoadingBarService } from './loading-bar.service';\nexport class LoadingBarModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders {\n    return {\n      ngModule: LoadingBarModule,\n      providers: [LoadingBarService],\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [LoadingBarComponent],\n  exports: [LoadingBarComponent],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LoadingBarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLoadingBarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLoadingBarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { LoadingBarService } from './loading-bar.service';\nexport class LoadingBarComponent {\n   includeSpinner = true;\n   includeBar = true;\n   fixed = true;\n   color;\n   height;\n   diameter;\n   value = null;\n/**\n * @param {?} loader\n */\nconstructor(public loader: LoadingBarService) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngx-loading-bar',\n  template: `\n    <ng-container *ngIf=\"(value !== null ? value : loader.progress$|async) as progress\">\n      <div id=\"loading-bar-spinner\" *ngIf=\"includeSpinner\" [style.color]=\"color\">\n        <div [style.width]=\"diameter\" [style.height]=\"diameter\" class=\"spinner-icon\"></div>\n      </div>\n      <div id=\"loading-bar\" *ngIf=\"includeBar\" [style.color]=\"color\">\n        <div class=\"bar\" [style.background]=\"color\" [style.height]=\"height\" [style.width]=\"progress + '%'\">\n          <div class=\"peg\" [style.height]=\"height\"></div>\n        </div>\n      </div>\n    </ng-container>\n  `,\n  preserveWhitespaces: false,\n  styles: [`\n    /* Make clicks pass-through */\n    :host {\n      position: relative;\n      display: block; }\n      :host.loading-bar-fixed > div .bar {\n        position: fixed; }\n      :host.loading-bar-fixed > div:first-child {\n        position: fixed;\n        top: 10px;\n        left: 10px; }\n      :host.loading-bar-fixed > div .peg {\n        display: block; }\n      :host > div {\n        pointer-events: none;\n        -webkit-transition: 350ms linear all;\n        transition: 350ms linear all;\n        color: #29d;\n        /* Fancy blur effect */ }\n        :host > div .bar {\n          -webkit-transition: width 350ms;\n          transition: width 350ms;\n          background: #29d;\n          position: absolute;\n          z-index: 10002;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 2px;\n          border-bottom-right-radius: 1px;\n          border-top-right-radius: 1px; }\n        :host > div .peg {\n          display: none;\n          position: absolute;\n          width: 70px;\n          right: 0;\n          top: 0;\n          height: 2px;\n          opacity: .45;\n          -webkit-box-shadow: 1px 0 6px 1px;\n                  box-shadow: 1px 0 6px 1px;\n          color: inherit;\n          border-radius: 100%; }\n        :host > div:first-child {\n          display: block;\n          position: absolute;\n          z-index: 10002;\n          top: 5px;\n          left: 0px; }\n          :host > div:first-child .spinner-icon {\n            width: 14px;\n            height: 14px;\n            border: solid 2px transparent;\n            border-top-color: inherit;\n            border-left-color: inherit;\n            border-radius: 50%;\n            -webkit-animation: loading-bar-spinner 400ms linear infinite;\n                    animation: loading-bar-spinner 400ms linear infinite; }\n\n    @-webkit-keyframes loading-bar-spinner {\n      0% {\n        -webkit-transform: rotate(0deg);\n                transform: rotate(0deg); }\n      100% {\n        -webkit-transform: rotate(360deg);\n                transform: rotate(360deg); } }\n\n    @keyframes loading-bar-spinner {\n      0% {\n        -webkit-transform: rotate(0deg);\n                transform: rotate(0deg); }\n      100% {\n        -webkit-transform: rotate(360deg);\n                transform: rotate(360deg); } }\n  `],\n  host: {\n    '[class.loading-bar-fixed]': 'fixed',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LoadingBarService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'includeSpinner': [{ type: Input },],\n'includeBar': [{ type: Input },],\n'fixed': [{ type: Input },],\n'color': [{ type: Input },],\n'height': [{ type: Input },],\n'diameter': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\nfunction LoadingBarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nLoadingBarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLoadingBarComponent.ctorParameters;\n/** @type {?} */\nLoadingBarComponent.propDecorators;\n/** @type {?} */\nLoadingBarComponent.prototype.includeSpinner;\n/** @type {?} */\nLoadingBarComponent.prototype.includeBar;\n/** @type {?} */\nLoadingBarComponent.prototype.fixed;\n/** @type {?} */\nLoadingBarComponent.prototype.color;\n/** @type {?} */\nLoadingBarComponent.prototype.height;\n/** @type {?} */\nLoadingBarComponent.prototype.diameter;\n/** @type {?} */\nLoadingBarComponent.prototype.value;\n/** @type {?} */\nLoadingBarComponent.prototype.loader;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { debounceTime } from 'rxjs/operator/debounceTime';\nexport class LoadingBarService implements OnDestroy {\n  readonly progress$: Subject<number> = debounceTime.call(new Subject<number>());\nprivate _pending = new Subject<number>();\nprivate _pendingRequests = 0;\nprivate _value = 0;\nprivate _incTimeout: any;\n/**\n * @param {?=} initialValue\n * @return {?}\n */\nstart(initialValue = 2) {\n    ++this._pendingRequests;\n    if (this._value === 0 || this._pendingRequests === 1) {\n      // Inserts the loading bar element into the dom, and sets it to 2%\n      this.set(this._pendingRequests === 1 && this._value > 0 ? this._value : initialValue);\n    }\n  }\n/**\n * @return {?}\n */\ncomplete() {\n    if (this._pendingRequests === 0 && this._value === 0) {\n      return;\n    }\n\n    if (this._pendingRequests > 0) {\n      --this._pendingRequests;\n    }\n\n    if (this._pendingRequests === 0 || (this._pendingRequests === 0 && this._value > 0)) {\n      if (this._value !== 100) {\n        this.set(100);\n      }\n\n      // Attempt to aggregate any start/complete calls within 500ms:\n      setTimeout(() => this.set(0), 500);\n    }\n  }\n/**\n * Set the loading bar's width to a certain percent.\n * \n * @param {?} n any value between 0 and 100\n * @return {?}\n */\nset(n) {\n    if (n === 0 && this._pendingRequests > 0) {\n      n = 2;\n    }\n\n    this._value = n;\n    this.progress$.next(n);\n\n    if (this._pendingRequests === 0) {\n      return;\n    }\n\n    // increment loadingbar to give the illusion that there is always\n    // progress but make sure to cancel the previous timeouts so we don't\n    // have multiple incs running at the same time.\n    clearTimeout(this._incTimeout);\n    if (this._value > 0 && this._value < 100) {\n      this._incTimeout = setTimeout(() => this.increment(), 250);\n    }\n  }\n/**\n * Increments the loading bar by a random amount\n * but slows down as it progresses\n * @param {?=} rnd\n * @return {?}\n */\nincrement(rnd = 0) {\n    if (rnd > 0) {\n      this.set(this._value + rnd);\n    }\n\n    const /** @type {?} */ stat = this._value;\n    if (stat >= 0 && stat < 25) {\n      // Start out between 3 - 6% increments\n      rnd = (Math.random() * (5 - 3 + 1) + 3);\n    } else if (stat >= 25 && stat < 65) {\n      // increment between 0 - 3%\n      rnd = (Math.random() * 3);\n    } else if (stat >= 65 && stat < 90) {\n      // increment between 0 - 2%\n      rnd = (Math.random() * 2);\n    } else if (stat >= 90 && stat < 99) {\n      // finally, increment it .5 %\n      rnd = 0.5;\n    } else {\n      // after 99%, don't increment:\n      rnd = 0;\n    }\n\n    this.set(this._value + rnd);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.progress$.complete();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LoadingBarService_tsickle_Closure_declarations() {\n/** @type {?} */\nLoadingBarService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLoadingBarService.ctorParameters;\n/** @type {?} */\nLoadingBarService.prototype.progress$;\n/** @type {?} */\nLoadingBarService.prototype._pending;\n/** @type {?} */\nLoadingBarService.prototype._pendingRequests;\n/** @type {?} */\nLoadingBarService.prototype._value;\n/** @type {?} */\nLoadingBarService.prototype._incTimeout;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["Subject","debounceTime"],"mappings":"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"}